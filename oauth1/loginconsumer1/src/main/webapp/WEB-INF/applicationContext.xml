<?xml version="1.0" encoding="UTF-8"?>

<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans" xmlns:u="http://www.springframework.org/schema/util"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
              http://www.springframework.org/schema/security/oauth http://www.springframework.org/schema/security/spring-security-oauth-1.0.xsd">

	<b:bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<b:property name="location" value="/WEB-INF/sparklr.properties" />
	</b:bean>

	<http entry-point-ref="loginEntryPoint">
		<intercept-url pattern="/**" access="ROLE_USER" />

		<logout logout-success-url="/loggedout.jsp" />
		<anonymous enabled="false" />
		<custom-filter ref="standardOAuthFilters" after="EXCEPTION_TRANSLATION_FILTER" />

		<custom-filter ref="oauthAuthenticationProcessingFilter"
			before="FILTER_SECURITY_INTERCEPTOR" />
	</http>

	<b:bean id="loginEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<b:constructor-arg value="/login" />
	</b:bean>

	<b:bean id="oauthAuthenticationProcessingFilter"
		class="com.example.oauth1.loginconsumer.OAuthAuthenticationProcessingFilter">
		<b:constructor-arg value="/login" />

		<b:property name="authenticationManager" ref="authenticationManager" />
		<b:property name="userInfoUrl"
			value="http://localhost:8080/loginprovider1/userinfo" />
		<b:property name="restTemplate" ref="sparklrTemplate" />
	</b:bean>
	
	 <!--<oauth:rest-template id="sparklrTemplate" resource="sparklrPhotos"/>-->

	<b:bean id="sparklrTemplate"
		class="org.springframework.security.oauth.consumer.client.OAuthRestTemplate">
		<b:constructor-arg ref="sparklrPhotos" />
	</b:bean>

	<authentication-manager alias="authenticationManager" />

	<b:bean id="standardOAuthFilters" class="org.springframework.web.filter.CompositeFilter">
		<b:property name="filters">
			<b:list>
				<b:ref bean="oauthConsumerContextFilter" />
				<b:ref bean="oauthConsumerFilter" />
			</b:list>
		</b:property>
	</b:bean>
	
<!-- 
	START OF STANDARD OAUTH FILTERS
 -->
	<b:bean id="oauthConsumerContextFilter"
		class="org.springframework.security.oauth.consumer.filter.OAuthConsumerContextFilter">
		<b:property name="OAuthFailureHandler">
			<b:bean
				class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
				<b:property name="errorPage" value="/oauth_error.jsp" />
			</b:bean>
		</b:property>
		<b:property name="messageSource" ref="messageSource" />
		<b:property name="consumerSupport">
			<b:bean
				class="org.springframework.security.oauth.consumer.client.CoreOAuthConsumerSupport">
				<b:property name="protectedResourceDetailsService" ref="resourceDetails" />
			</b:bean>
		</b:property>
	</b:bean>

	<b:bean id="oauthConsumerFilter"
		class="org.springframework.security.oauth.consumer.filter.OAuthConsumerProcessingFilter">
		<b:property name="requireAuthenticated" value="false" />
		<b:property name="protectedResourceDetailsService" ref="resourceDetails" />
		<b:property name="objectDefinitionSource">
			<b:bean
				class="org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource">
				<b:constructor-arg>
					<u:map map-class="java.util.LinkedHashMap">
						<b:entry>
							<b:key>
								<b:bean
									class="org.springframework.security.web.util.AnyRequestMatcher" />
							</b:key>
							<b:bean class="org.springframework.security.access.SecurityConfig">
								<b:constructor-arg value="sparklrPhotos" />
							</b:bean>
						</b:entry>
					</u:map>
				</b:constructor-arg>
			</b:bean>
		</b:property>
		<b:property name="messageSource" ref="messageSource" />
	</b:bean>
	
<!-- MAGIC ALTERNATIVE FOR CREATION OF STANDARD OAUTH FILTERS
	This short form will create everything that is stated above plus 
	it will instrument the security filter chain inserting these two 
	OAuth filters. Since we are inserting them manually in the unusual 
	place we create them manually).
	
	<oauth:consumer resource-details-service-ref="resourceDetails"
		oauth-failure-page="/oauth_error.jsp" requireAuthenticated="false">
		<oauth:url pattern="/**" resources="sparklrPhotos" />
	</oauth:consumer>
 -->


	<oauth:resource-details-service id="resourceDetails">
		<oauth:resource id="sparklrPhotos" key="tonr-consumer-key"
			secret="SHHHHH!!!!!!!!!!" request-token-url="http://localhost:8080/loginprovider1/oauth/request_token"
			user-authorization-url="http://localhost:8080/loginprovider1/oauth/confirm_access"
			access-token-url="http://localhost:8080/loginprovider1/oauth/access_token" />
	</oauth:resource-details-service>

</b:beans>
