<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<http  xmlns="http://www.springframework.org/schema/security"
	    entry-point-ref="loginEntryPoint">
	    <intercept-url pattern="/**" access="ROLE_USER" />

		<logout logout-success-url="/loggedout.jsp" />
		<anonymous enabled="false" />
		
		<custom-filter ref="oauth2ClientFilter" after="EXCEPTION_TRANSLATION_FILTER" />
		<custom-filter ref="oauthAuthenticationProcessingFilter" before="FILTER_SECURITY_INTERCEPTOR" />
	</http>

	<bean id="oauthAuthenticationProcessingFilter" class="com.example.oauth2.loginconsumer.OAuthAuthenticationProcessingFilter" >
	    <constructor-arg value="/login" />
	    
	    <property name="authenticationManager" ref="authenticationManager" />\
	    <!-- TODO take this from properties -->
	    <property name="userInfoUrl" value="http://localhost:8080/loginprovider2/userinfo" />
	    <property name="restTemplate" ref="sparklrTemplate" />
	</bean>
	
	<oauth:rest-template id="sparklrTemplate" resource="sparklr"/>
	
	
	<sec:authentication-manager alias="authenticationManager" />
	
	<bean id="loginEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<constructor-arg value="/login" />
	</bean>
	
	
	<!--apply the oauth client context -->
	<oauth:client id="oauth2ClientFilter" />

	<!--define an oauth 2 resource for sparklr -->
	<oauth:resource id="sparklr" type="authorization_code" client-id="tonr" client-secret="secret"
		access-token-uri="${accessTokenUri}" user-authorization-uri="${userAuthorizationUri}" scope="read,write" />

	<!--define an oauth 2 resource for trusted client on sparklr -->
	<oauth:resource id="trusted" type="client_credentials" client-id="my-client-with-registered-redirect"
		access-token-uri="${accessTokenUri}" scope="trust" />

	<context:property-placeholder location="classpath:/sparklr.properties" />

	<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean class="com.example.oauth2.loginconsumer.converter.AccessTokenRequestConverter" />
			</set>
		</property>
	</bean>

	<mvc:default-servlet-handler />

	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="contentViewResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
			</map>
		</property>
		<property name="defaultViews">
			<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
		</property>
	</bean>

	<!--Basic application beans. -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="sparklrController" class="com.example.oauth2.loginconsumer.mvc.SparklrController">
		<property name="sparklrService" ref="sparklrService" />
	</bean>

		<bean id="sparklrService" class="com.example.oauth2.loginconsumer.impl.ProviderServiceImpl">
		<property name="sparklrPhotoListURL" value="${sparklrPhotoListURL}" />
		<property name="sparklrTrustedMessageURL" value="${sparklrTrustedMessageURL}" />
		<property name="sparklrPhotoURLPattern" value="${sparklrPhotoURLPattern}" />
		<property name="sparklrRestTemplate">
			<oauth:rest-template resource="sparklr" />
		</property>
		<property name="trustedClientRestTemplate">
			<oauth:rest-template resource="trusted" />
		</property>
	</bean>

</beans>
